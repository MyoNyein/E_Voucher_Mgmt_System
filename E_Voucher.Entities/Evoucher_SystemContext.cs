// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;

namespace E_Voucher.Entities
{
    public partial class Evoucher_SystemContext : DbContext
    {
        public Evoucher_SystemContext()
        {
        }

        public Evoucher_SystemContext(DbContextOptions<Evoucher_SystemContext> options)
            : base(options)
        {
        }

        public virtual DbSet<TblBuyType> TblBuyType { get; set; }
        public virtual DbSet<TblEvoucher> TblEvoucher { get; set; }
        public virtual DbSet<TblGeneratedEvoucher> TblGeneratedEvoucher { get; set; }
        public virtual DbSet<TblPaymentMethod> TblPaymentMethod { get; set; }
        public virtual DbSet<TblPurchaseHistory> TblPurchaseHistory { get; set; }
        public virtual DbSet<TblPurchaseOrder> TblPurchaseOrder { get; set; }
        public virtual DbSet<TblRefreshToken> TblRefreshToken { get; set; }
        public virtual DbSet<TblUserPassword> TblUserPassword { get; set; }
        public virtual DbSet<TblUsers> TblUsers { get; set; }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<TblBuyType>(entity =>
            {
                entity.ToTable("Tbl_Buy_Type");

                entity.Property(e => e.BuyType)
                    .IsRequired()
                    .HasColumnName("Buy_Type")
                    .HasMaxLength(20);

                entity.Property(e => e.Description).HasMaxLength(100);

                entity.Property(e => e.MaxLimit).HasColumnName("Max_Limit");

                entity.Property(e => e.Status).HasDefaultValueSql("('0')");
            });

            modelBuilder.Entity<TblEvoucher>(entity =>
            {
                entity.HasKey(e => e.VoucherNo)
                    .HasName("PK_TBL_EVOUCHER");

                entity.ToTable("Tbl_EVoucher");

                entity.Property(e => e.VoucherNo)
                    .HasColumnName("Voucher_No")
                    .HasMaxLength(20);

                entity.Property(e => e.BuyType)
                    .IsRequired()
                    .HasColumnName("Buy_Type")
                    .HasMaxLength(20);

                entity.Property(e => e.CreatedBy)
                    .IsRequired()
                    .HasColumnName("Created_By")
                    .HasMaxLength(300);

                entity.Property(e => e.CreatedOn)
                    .HasColumnName("Created_On")
                    .HasColumnType("datetime");

                entity.Property(e => e.Description).HasMaxLength(1000);

                entity.Property(e => e.ExpiryDate)
                    .HasColumnName("Expiry_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.GiftPerUserLimit).HasColumnName("Gift_Per_User_Limit");

                entity.Property(e => e.Id).ValueGeneratedOnAdd();

                entity.Property(e => e.ImagePath)
                    .HasColumnName("Image_Path")
                    .HasMaxLength(100);

                entity.Property(e => e.LastUpdatedBy)
                    .HasColumnName("Last_Updated_By")
                    .HasColumnType("datetime");

                entity.Property(e => e.LastUpdatedOn)
                    .HasColumnName("Last_Updated_On")
                    .HasColumnType("datetime");

                entity.Property(e => e.MaxLimit).HasColumnName("Max_Limit");

                entity.Property(e => e.PaymentMethod)
                    .HasColumnName("Payment_Method")
                    .HasMaxLength(10);

                entity.Property(e => e.SellingDiscount).HasColumnName("Selling_Discount");

                entity.Property(e => e.SellingPrice)
                    .HasColumnName("Selling_Price")
                    .HasColumnType("money");

                entity.Property(e => e.Status).HasDefaultValueSql("('0')");

                entity.Property(e => e.Title)
                    .IsRequired()
                    .HasMaxLength(100);

                entity.Property(e => e.VoucherAmount)
                    .HasColumnName("Voucher_Amount")
                    .HasColumnType("money");
            });

            modelBuilder.Entity<TblGeneratedEvoucher>(entity =>
            {
                entity.HasKey(e => e.PromoCode)
                    .HasName("PK_TBL_GENERATED_EVOUCHER");

                entity.ToTable("Tbl_Generated_EVoucher");

                entity.HasIndex(e => e.Id)
                    .HasName("UQ__Tbl_Gene__3213E83E351C0AE2")
                    .IsUnique();

                entity.HasIndex(e => e.PromoCode)
                    .HasName("UQ__Tbl_Gene__BB785E2C9FC6502E")
                    .IsUnique();

                entity.Property(e => e.PromoCode)
                    .HasColumnName("Promo_Code")
                    .HasMaxLength(11);

                entity.Property(e => e.ExpiryDate)
                    .HasColumnName("Expiry_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.Id)
                    .HasColumnName("id")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.OwnerName)
                    .HasColumnName("Owner_Name")
                    .HasMaxLength(300);

                entity.Property(e => e.OwnerPhone)
                    .IsRequired()
                    .HasColumnName("Owner_Phone")
                    .HasMaxLength(50);

                entity.Property(e => e.PurchaseOrderNo)
                    .IsRequired()
                    .HasColumnName("PurchaseOrder_No")
                    .HasMaxLength(20);

                entity.Property(e => e.QrImagePath)
                    .IsRequired()
                    .HasColumnName("QR_Image_Path")
                    .HasMaxLength(100);

                entity.Property(e => e.Status)
                    .IsRequired()
                    .HasDefaultValueSql("('0')");

                entity.Property(e => e.VoncherAmount)
                    .HasColumnName("Voncher_Amount")
                    .HasColumnType("money");

                entity.Property(e => e.VoucherImagePath)
                    .IsRequired()
                    .HasColumnName("Voucher_Image_Path")
                    .HasMaxLength(100);

                entity.Property(e => e.VoucherNo)
                    .IsRequired()
                    .HasColumnName("Voucher_No")
                    .HasMaxLength(20);
            });

            modelBuilder.Entity<TblPaymentMethod>(entity =>
            {
                entity.HasKey(e => e.PaymentMethod)
                    .HasName("PK_TBL_PAYMENT_METHOD");

                entity.ToTable("Tbl_Payment_Method");

                entity.Property(e => e.PaymentMethod)
                    .HasColumnName("Payment_Method")
                    .HasMaxLength(10);

                entity.Property(e => e.Description)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.DiscountPercentage)
                    .HasColumnName("Discount_Percentage")
                    .HasDefaultValueSql("('0')");

                entity.Property(e => e.Id)
                    .HasColumnName("id")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.IsDiscount)
                    .IsRequired()
                    .HasColumnName("Is_Discount")
                    .HasDefaultValueSql("('0')");

                entity.Property(e => e.Status).HasDefaultValueSql("('0')");
            });

            modelBuilder.Entity<TblPurchaseHistory>(entity =>
            {
                entity.HasKey(e => e.PurchaseHistoryId)
                    .HasName("PK_TBL_PURCHASE_HISTORY");

                entity.ToTable("Tbl_Purchase_History");

                entity.Property(e => e.PurchaseHistoryId).HasColumnName("Purchase_History_Id");

                entity.Property(e => e.PromoCode)
                    .HasColumnName("Promo_Code")
                    .HasMaxLength(11);

                entity.Property(e => e.PurchaseDate)
                    .HasColumnName("Purchase_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.PurchaseOrderNo)
                    .IsRequired()
                    .HasColumnName("PurchaseOrder_No")
                    .HasMaxLength(20);

                entity.Property(e => e.VoucherNo)
                    .IsRequired()
                    .HasColumnName("Voucher_No")
                    .HasMaxLength(20);
            });

            modelBuilder.Entity<TblPurchaseOrder>(entity =>
            {
                entity.HasKey(e => e.PurchaseOrderNo)
                    .HasName("PK_TBL_PURCHASE_ORDER");

                entity.ToTable("Tbl_Purchase_Order");

                entity.Property(e => e.PurchaseOrderNo)
                    .HasColumnName("PurchaseOrder_No")
                    .HasMaxLength(20);

                entity.Property(e => e.BuyType)
                    .IsRequired()
                    .HasColumnName("Buy_Type")
                    .HasMaxLength(20);

                entity.Property(e => e.BuyerName)
                    .HasColumnName("Buyer_Name")
                    .HasMaxLength(300);

                entity.Property(e => e.BuyerPhone)
                    .IsRequired()
                    .HasColumnName("Buyer_Phone")
                    .HasMaxLength(50);

                entity.Property(e => e.ExpiryDate)
                    .HasColumnName("Expiry_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.Id).ValueGeneratedOnAdd();

                entity.Property(e => e.ImagePath)
                    .HasColumnName("Image_Path")
                    .HasMaxLength(100);

                entity.Property(e => e.OrderDate)
                    .HasColumnName("Order_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.PaymentMethod)
                    .IsRequired()
                    .HasColumnName("Payment_Method")
                    .HasMaxLength(10);

                entity.Property(e => e.SellingDiscount)
                    .HasColumnName("Selling_Discount")
                    .HasDefaultValueSql("('0')");

                entity.Property(e => e.SellingPrice)
                    .HasColumnName("Selling_Price")
                    .HasColumnType("money");

                entity.Property(e => e.TotalSellingAmount)
                    .HasColumnName("Total_Selling_Amount")
                    .HasColumnType("money");

                entity.Property(e => e.VoncherAmount)
                    .HasColumnName("Voncher_Amount")
                    .HasColumnType("money");

                entity.Property(e => e.VoucherGenerated)
                    .IsRequired()
                    .HasColumnName("Voucher_Generated")
                    .HasDefaultValueSql("('0')");

                entity.Property(e => e.VoucherNo)
                    .IsRequired()
                    .HasColumnName("Voucher_No")
                    .HasMaxLength(20);
            });

            modelBuilder.Entity<TblRefreshToken>(entity =>
            {
                entity.HasKey(e => e.RefreshToken)
                    .HasName("PK_TBL_REFRESH_TOKEN");

                entity.ToTable("Tbl_Refresh_Token");

                entity.Property(e => e.RefreshToken)
                    .HasColumnName("Refresh_Token")
                    .HasMaxLength(300);

                entity.Property(e => e.ExpiryDate)
                    .HasColumnName("Expiry_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.RefreshTokenId)
                    .HasColumnName("RefreshToken_Id")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.UserId).HasColumnName("User_Id");
            });

            modelBuilder.Entity<TblUserPassword>(entity =>
            {
                entity.HasKey(e => e.UserId)
                    .HasName("PK_TBL_USER_PASSWORD");

                entity.ToTable("Tbl_User_Password");

                entity.Property(e => e.UserId)
                    .HasColumnName("User_Id")
                    .ValueGeneratedNever();

                entity.Property(e => e.ActivePassword)
                    .HasColumnName("Active_Password")
                    .HasMaxLength(50);

                entity.Property(e => e.Id).ValueGeneratedOnAdd();

                entity.Property(e => e.Password1)
                    .HasColumnName("Password_1")
                    .HasMaxLength(50);

                entity.Property(e => e.Password2)
                    .HasColumnName("Password_2")
                    .HasMaxLength(50);

                entity.Property(e => e.Password3)
                    .HasColumnName("Password_3")
                    .HasMaxLength(50);

                entity.Property(e => e.Status).HasDefaultValueSql("('0')");
            });

            modelBuilder.Entity<TblUsers>(entity =>
            {
                entity.HasKey(e => e.UserId)
                    .HasName("PK_TBL_USERS");

                entity.ToTable("Tbl_Users");

                entity.Property(e => e.UserId).HasColumnName("User_Id");

                entity.Property(e => e.CreatedOn)
                    .HasColumnName("Created_On")
                    .HasColumnType("datetime");

                entity.Property(e => e.DisplayName).HasMaxLength(1000);

                entity.Property(e => e.FirstName)
                    .IsRequired()
                    .HasColumnName("First_Name")
                    .HasMaxLength(300);

                entity.Property(e => e.LastName)
                    .HasColumnName("Last_Name")
                    .HasMaxLength(300);

                entity.Property(e => e.LastUpdatedOn)
                    .HasColumnName("Last_Updated_On")
                    .HasColumnType("datetime");

                entity.Property(e => e.LoginId)
                    .IsRequired()
                    .HasColumnName("Login_Id")
                    .HasMaxLength(300);

                entity.Property(e => e.MiddleName)
                    .HasColumnName("Middle_Name")
                    .HasMaxLength(300);

                entity.Property(e => e.MultiSessionEnable)
                    .IsRequired()
                    .HasColumnName("Multi_Session_Enable")
                    .HasDefaultValueSql("('0')");

                entity.Property(e => e.Status).HasDefaultValueSql("('0')");
            });

            OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}